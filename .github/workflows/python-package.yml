name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pylint black isort mdanalysis
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with Black
      run: |
        black --check .
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .
    
    - name: Lint with Pylint
      run: |
        pylint **/*.py
    
    - name: Test with pytest
      run: |
        pytest
    
    - name: Check MDAnalysis compatibility
      run: |
        python -c "import MDAnalysis; print(MDAnalysis.__version__)"
        # Add any specific MDAnalysis-related checks here
    
    - name: Run dcd_frame_editor.py (if it exists)
      run: |
        if [ -f dcd_frame_editor.py ]; then
          python dcd_frame_editor.py --help
          # Add more specific tests for dcd_frame_editor.py here
        fi
